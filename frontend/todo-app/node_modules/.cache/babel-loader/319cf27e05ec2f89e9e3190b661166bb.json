{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\sheka\\\\Desktop\\\\full stack app\\\\full-stack-with-react-and-spring-boot\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nvar LoginComponent = /*#__PURE__*/function (_Component) {\n  _inherits(LoginComponent, _Component);\n\n  function LoginComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LoginComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginComponent).call(this, props));\n    _this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    }; // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClicked = _this.loginClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      //console.log(this.state);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    } // handleUsernameChange(event) {\n    //     console.log(event.target.name);\n    //     this.setState(\n    //         {\n    //             [event.target.name]\n    //               :event.target.value\n    //         }\n    //     )\n    // }\n    // handlePasswordChange(event) {\n    //     console.log(event.target.value);\n    //     this.setState({password:event.target.value})\n    // }\n\n  }, {\n    key: \"loginClicked\",\n    value: function loginClicked() {\n      in28minutes, dummy;\n\n      if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\n        AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n        this.props.history.push(\"/welcome/\".concat(this.state.username)); //this.setState({showSuccessMessage:true})\n        //this.setState({hasLoginFailed:false})\n      } else {\n        this.setState({\n          showSuccessMessage: false\n        });\n        this.setState({\n          hasLoginFailed: true\n        });\n      } // AuthenticationService\n      // .executeBasicAuthenticationService(this.state.username, this.state.password)\n      // .then(() => {\n      //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\n      //     this.props.history.push(`/welcome/${this.state.username}`)\n      // }).catch( () =>{\n      //     this.setState({showSuccessMessage:false})\n      //     this.setState({hasLoginFailed:true})\n      // })\n      // AuthenticationService\n      //     .executeJwtAuthenticationService(this.state.username, this.state.password)\n      //     .then((response) => {\n      //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n      //         this.props.history.push(`/welcome/${this.state.username}`)\n      //     }).catch(() => {\n      //         this.setState({ showSuccessMessage: false })\n      //         this.setState({ hasLoginFailed: true })\n      //     })\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 51\n        }\n      }, \"Invalid Credentials\"), this.state.showSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 55\n        }\n      }, \"Login Sucessful\"), \"User Name: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 32\n        }\n      }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: this.loginClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginComponent;\n}(Component);\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Users/sheka/Desktop/full stack app/full-stack-with-react-and-spring-boot/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","in28minutes","dummy","registerSuccessfulLogin","history","push"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;IAEMC,c;;;AAEF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,aADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb,CAHe,CASf;AACA;;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAZe;AAalB;;;;iCAEYE,K,EAAO;AAChB;AACA,WAAKC,QAAL,qBAESD,KAAK,CAACE,MAAN,CAAaC,IAFtB,EAGcH,KAAK,CAACE,MAAN,CAAaE,KAH3B;AAMH,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;mCAEe;AACXC,MAAAA,WAAW,EAACC,KAAZ;;AACA,UAAG,KAAKd,KAAL,CAAWC,QAAX,KAAsB,aAAtB,IAAuC,KAAKD,KAAL,CAAWE,QAAX,KAAsB,OAAhE,EAAwE;AACpEL,QAAAA,qBAAqB,CAACkB,uBAAtB,CAA8C,KAAKf,KAAL,CAAWC,QAAzD,EAAkE,KAAKD,KAAL,CAAWE,QAA7E;AACA,aAAKH,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,oBAAoC,KAAKjB,KAAL,CAAWC,QAA/C,GAFoE,CAGpE;AACA;AACH,OALD,MAMK;AACD,aAAKQ,QAAL,CAAc;AAACL,UAAAA,kBAAkB,EAAC;AAApB,SAAd;AACA,aAAKK,QAAL,CAAc;AAACN,UAAAA,cAAc,EAAC;AAAhB,SAAd;AACH,OAXU,CAaX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH;;;6BAEQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK,KAAKH,KAAL,CAAWG,cAAX,iBAA6B;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFlC,EAGK,KAAKH,KAAL,CAAWI,kBAAX,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHtC,8BAKe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,QAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf,6BAMc;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,QAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANd,eAOI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPJ,CAFJ,CADJ;AAcH;;;;EA7FwBX,S;;AAgG7B,eAAeE,cAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: 'in28minutes',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        //console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]\r\n                    : event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    // handleUsernameChange(event) {\r\n    //     console.log(event.target.name);\r\n    //     this.setState(\r\n    //         {\r\n    //             [event.target.name]\r\n    //               :event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    // handlePasswordChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState({password:event.target.value})\r\n    // }\r\n\r\n    loginClicked() {\r\n        in28minutes,dummy\r\n        if(this.state.username==='in28minutes' && this.state.password==='dummy'){\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n            //this.setState({showSuccessMessage:true})\r\n            //this.setState({hasLoginFailed:false})\r\n        }\r\n        else {\r\n            this.setState({showSuccessMessage:false})\r\n            this.setState({hasLoginFailed:true})\r\n        }\r\n\r\n        // AuthenticationService\r\n        // .executeBasicAuthenticationService(this.state.username, this.state.password)\r\n        // .then(() => {\r\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n        //     this.props.history.push(`/welcome/${this.state.username}`)\r\n        // }).catch( () =>{\r\n        //     this.setState({showSuccessMessage:false})\r\n        //     this.setState({hasLoginFailed:true})\r\n        // })\r\n\r\n        \r\n        // AuthenticationService\r\n        //     .executeJwtAuthenticationService(this.state.username, this.state.password)\r\n        //     .then((response) => {\r\n        //         AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\r\n        //         this.props.history.push(`/welcome/${this.state.username}`)\r\n        //     }).catch(() => {\r\n        //         this.setState({ showSuccessMessage: false })\r\n        //         this.setState({ hasLoginFailed: true })\r\n        //     })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\r\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}